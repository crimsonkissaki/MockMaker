{
    "name": "crimsonkissaki/mockmaker",
    "description": "MockMaker simplifies the process of generating test doubles of various classes with a particular emphasis on ORM entities. With a variety of options, MockMaker will take a list of files and automatically generate 'seed' files for each that can be quickly edited with default values. If a property doesn't have a setter it will create a straight value assignment. If there is a typehinted class or a default value it will be automatically included in the seed file to simplify the process. If the property is private or protected, it will automatically include the reflection code required to set those values. Flexible and extendable, the seed code can be altered to suit your particular project with relative ease so after the initial setup you can re-run MockMaker for any new entities that get added in with little to no fuss. Default seed files have two primary methods. The first is a 'basic' mock creator with static value assignments. The second is a fully customizable 'advanced' mock creator that allows for compile-time customization of entity values so you can use PHPUnit data providers, factories, fixtures, etc. to generate as many customized entity instances as your tests require.",
    "keywords": ["library", "testing", "test", "stub", "mock", "test double", "tdd", "bdd", "mock objects"],
    "homepage": "http://github.com/crimsonkissaki/mockmaker",
    "license": "MIT",
    "authors": [
        {
            "name": "Evan Johnson",
            "email": "crimsonminion@gmail.com"
        }
    ],
    "require": {
        "php": ">=5.3.3",
        "mockery/mockery": "dev-master"
    },
    "require-dev": {
        "phpunit/phpunit": "4.5.*",
        "phpmd/phpmd": "@stable",
        "pdepend/pdepend": "@stable",
        "phploc/phploc": "*"
    },
    "autoload": {
        "psr-4": {
            "MockMaker\\": "library/MockMaker"
        }
    }
}
