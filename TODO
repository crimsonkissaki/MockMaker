MockMaker:

    how to handle classes with __constructors when they're passing in a string?
    - might have to sacrifice some relection abilities since we can't mock it
    - use mockery to create mocks of __construct arguments
    - they could always pass in mocks for the class?
        - allow for automatic scanning of an existing "Mocks" folder
        and then automagically include the basic mocks if they're present?
        - if processing an entire directory, would it be a good idea to create
        a "generation path" based on "who needs whom" requirements?
            - no dependencies or external references, make them first so they
            can be included in other mocks
        - could look for use statements and combine that with type hints

    create unit tests for mocks?

    allow for multiple (in|ex)clude regex strings?

    re-include custom name format for mock class

    use setters of properties to check for additional typehints to set property default values

FileGenerator:

    If files are found in a sub-directory, save them to the same sub-directory
    - allow preserveTree override

    Is it possible to automatically include mock calls for known classes?
    - this might require analyzing the ORM annotations ...
    - have to include auto-detect + override ... or custom implementation?

ArgumentWorker:

    There are some values that cannot be obtained unless the PHP version is high enough:
    - do I want to mess with these?
    - need to investigate how these are used and WHY you'd want them.
    - or i could just add them BIC
        php >= 5.4
            isCallable()
            isDefaultValueConstant()
            getDefaultValueConstantName()
        php >= 5.6
            isVariadic()	-> function sum(...$numbers) {} -> elipsis indicated method overloading



BUGS:

    static file assignments in default method are enclosed in quotes

    all public methods are making it in, not just setters (is it '/^set/' ?)

    add a check for setter methods that don't have an associated property
    - put them in, but comment them out
    - might need to change the method worker to ensure it DOES have a property